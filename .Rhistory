rm(list = ls())
options("scipen"=100, "digits"=2)
library(readxl)
library(readr)
library(arules)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(stringr)
library(knitr)
library(agricolae)
install.packages("agricolae")
rm(list = ls())
options("scipen"=100, "digits"=2)
library(readxl)
library(readr)
library(arules)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(stringr)
library(knitr)
library(agricolae)
library(arules)
respostas <- read_excel("raw.xlsx", sheet = "unificado", na = "")
respostas$Q1 <- NULL
respostas$Q2 <- NULL
respostas$Serie <- stringr::str_trim(respostas$Serie, side = "both")
respostas <- as.data.frame(lapply(respostas, as.factor))
opcao <- data.frame(Fara_Computacao = levels(respostas$Fara_Computacao), opcao_computacao = c(1, 2, 3))
respostas <- merge(respostas, opcao)
respostas <- respostas[, c(37, 1:36)]
respostas <- subset(respostas, respostas$Sexo == "F")
respostas$Sexo <- NULL
series <- aggregate(x = list(Quantidade = respostas$Serie), by = list(Ano = respostas$Ano, Serie = respostas$Serie), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Serie), by = list(Ano = respostas$Ano), FUN=length)
series <- merge(series, por_ano)
series$Percentual <- series$Quantidade * 100 / series$Total
p = ggplot(data = series, aes(x = "", y = Percentual, fill = Serie))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Série em cada Ano")
p
cursos <- aggregate(x = list(Quantidade = respostas$Fara_Curso_Superior), by = list(Ano = respostas$Ano, Fara_Curso_Superior = respostas$Fara_Curso_Superior), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Fara_Curso_Superior), by = list(Ano = respostas$Ano), FUN=length)
cursos <- merge(cursos, por_ano)
cursos$Percentual <- cursos$Quantidade * 100 / cursos$Total
p = ggplot(data = cursos, aes(x = "", y = Percentual, fill = Fara_Curso_Superior))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Área de Interesse")
p
comp <- aggregate(x = list(Quantidade = respostas$Fara_Computacao), by = list(Ano = respostas$Ano, Fara_Computacao = respostas$Fara_Computacao), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Fara_Computacao), by = list(Ano = respostas$Ano), FUN=length)
comp <- merge(comp, por_ano)
comp$Percentual <- comp$Quantidade * 100 / comp$Total
p = ggplot(data = comp, aes(x = "", y = Percentual, fill = Fara_Computacao))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Interesse em Computação")
p
tam_amostra <- 400
niveis <- levels(respostas$Ano)
amostra_anova <- NULL
set.seed(2017)
for (i in 1:length(niveis)) {
temp <- respostas[respostas$Ano == niveis[i],]
rownames(temp) <- 1:nrow(temp)
temp <- temp[sample(nrow(temp), tam_amostra), ]
if (is.null(amostra_anova)) {
amostra_anova <- temp
} else {
amostra_anova <- rbind(amostra_anova, temp)
}
}
rm("temp")
temp <- data.frame(tratamento = amostra_anova[, 3], opcao_computacao = amostra_anova[, 1])
knit_print(aggregate(x = list(Media = temp$opcao_computacao), by = list(Tratamento = temp$tratamento), FUN=mean))
cat("\n")
fit <- aov(opcao_computacao ~ tratamento, data = temp)
knit_print(anova(fit))
cat("\n")
knit_print(HSD.test(fit, 'tratamento'))
par(mfrow=c(2,2))
plot(fit)
for (i in 4:ncol(amostra_anova)) {
temp <- data.frame(tratamento = amostra_anova[, i], opcao_computacao = amostra_anova[, 1])
nome <- colnames(amostra_anova)[i]
cat(paste("\nTratamento:", nome, "\n"))
cat("\n")
knit_print(aggregate(x = list(Media = temp$opcao_computacao), by = list(Tratamento = temp$tratamento), FUN=mean))
cat("\n")
fit <- aov(opcao_computacao ~ tratamento, data = temp)
knit_print(anova(fit))
cat("\n")
knit_print(HSD.test(fit, 'tratamento'))
assign(nome, temp)
par(mfrow=c(2,2))
plot(fit)
}
# regras = apriori(data = respostas)
# regras = apriori(data = respostas, parameter = list(minlen=2, supp=0.1, conf=0.8, maxtime=300), appearance = list(rhs = c("Fara_Computacao=Sim", "Fara_Computacao=Nao", "Fara_Computacao=Nao sei ainda"), default="lhs"))
# regras.ordem <- sort(regras, by="lift")
# write(regras.ordem, file="../dados/regras.txt")
rm(list = ls())
options("scipen"=100, "digits"=2)
library(readxl)
library(readr)
library(arules)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(stringr)
library(knitr)
library(agricolae)
library(arules)
respostas <- read_excel("raw.xlsx", sheet = "unificado", na = "")
respostas$Q1 <- NULL
respostas$Q2 <- NULL
respostas$Serie <- stringr::str_trim(respostas$Serie, side = "both")
respostas <- as.data.frame(lapply(respostas, as.factor))
opcao <- data.frame(Fara_Computacao = levels(respostas$Fara_Computacao), opcao_computacao = c(1, 2, 3))
respostas <- merge(respostas, opcao)
respostas <- respostas[, c(37, 1:36)]
respostas <- subset(respostas, respostas$Sexo == "F")
respostas$Sexo <- NULL
series <- aggregate(x = list(Quantidade = respostas$Serie), by = list(Ano = respostas$Ano, Serie = respostas$Serie), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Serie), by = list(Ano = respostas$Ano), FUN=length)
series <- merge(series, por_ano)
series$Percentual <- series$Quantidade * 100 / series$Total
p = ggplot(data = series, aes(x = "", y = Percentual, fill = Serie))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Série em cada Ano")
p
cursos <- aggregate(x = list(Quantidade = respostas$Fara_Curso_Superior), by = list(Ano = respostas$Ano, Fara_Curso_Superior = respostas$Fara_Curso_Superior), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Fara_Curso_Superior), by = list(Ano = respostas$Ano), FUN=length)
cursos <- merge(cursos, por_ano)
cursos$Percentual <- cursos$Quantidade * 100 / cursos$Total
p = ggplot(data = cursos, aes(x = "", y = Percentual, fill = Fara_Curso_Superior))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Área de Interesse")
p
comp <- aggregate(x = list(Quantidade = respostas$Fara_Computacao), by = list(Ano = respostas$Ano, Fara_Computacao = respostas$Fara_Computacao), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Fara_Computacao), by = list(Ano = respostas$Ano), FUN=length)
comp <- merge(comp, por_ano)
comp$Percentual <- comp$Quantidade * 100 / comp$Total
p = ggplot(data = comp, aes(x = "", y = Percentual, fill = Fara_Computacao))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Interesse em Computação")
p
tam_amostra <- 400
niveis <- levels(respostas$Ano)
amostra_anova <- NULL
set.seed(2017)
for (i in 1:length(niveis)) {
temp <- respostas[respostas$Ano == niveis[i],]
rownames(temp) <- 1:nrow(temp)
temp <- temp[sample(nrow(temp), tam_amostra), ]
if (is.null(amostra_anova)) {
amostra_anova <- temp
} else {
amostra_anova <- rbind(amostra_anova, temp)
}
}
rm("temp")
temp <- data.frame(Tratamento = amostra_anova[, 3], Opcao_Computacao = amostra_anova[, 1])
fit <- aov(Opcao_Computacao ~ Tratamento, data = temp)
knit_print(anova(fit))
cat("\n")
knit_print(HSD.test(fit, 'Tratamento'))
par(mfrow=c(2,2))
plot(fit)
for (i in 4:ncol(amostra_anova)) {
temp <- data.frame(Tratamento = amostra_anova[, i], Opcao_Computacao = amostra_anova[, 1])
nome <- colnames(amostra_anova)[i]
cat(paste("\nTratamento:", nome, "\n"))
cat("\n")
fit <- aov(Opcao_Computacao ~ Tratamento, data = temp)
knit_print(anova(fit))
cat("\n")
knit_print(HSD.test(fit, 'Tratamento'))
assign(nome, temp)
par(mfrow=c(2,2))
plot(fit)
}
# regras = apriori(data = respostas)
# regras = apriori(data = respostas, parameter = list(minlen=2, supp=0.1, conf=0.8, maxtime=300), appearance = list(rhs = c("Fara_Computacao=Sim", "Fara_Computacao=Nao", "Fara_Computacao=Nao sei ainda"), default="lhs"))
# regras.ordem <- sort(regras, by="lift")
# write(regras.ordem, file="../dados/regras.txt")
rm(list = ls())
options("scipen"=100, "digits"=2)
library(readxl)
library(readr)
library(arules)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(stringr)
library(knitr)
library(agricolae)
library(arules)
respostas <- read_excel("raw.xlsx", sheet = "unificado", na = "")
respostas$Q1 <- NULL
respostas$Q2 <- NULL
respostas$Serie <- stringr::str_trim(respostas$Serie, side = "both")
respostas <- as.data.frame(lapply(respostas, as.factor))
opcao <- data.frame(Fara_Computacao = levels(respostas$Fara_Computacao), opcao_computacao = c(1, 2, 3))
respostas <- merge(respostas, opcao)
respostas <- respostas[, c(37, 1:36)]
respostas <- subset(respostas, respostas$Sexo == "F")
respostas$Sexo <- NULL
series <- aggregate(x = list(Quantidade = respostas$Serie), by = list(Ano = respostas$Ano, Serie = respostas$Serie), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Serie), by = list(Ano = respostas$Ano), FUN=length)
series <- merge(series, por_ano)
series$Percentual <- series$Quantidade * 100 / series$Total
p = ggplot(data = series, aes(x = "", y = Percentual, fill = Serie))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Série em cada Ano")
p
cursos <- aggregate(x = list(Quantidade = respostas$Fara_Curso_Superior), by = list(Ano = respostas$Ano, Fara_Curso_Superior = respostas$Fara_Curso_Superior), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Fara_Curso_Superior), by = list(Ano = respostas$Ano), FUN=length)
cursos <- merge(cursos, por_ano)
cursos$Percentual <- cursos$Quantidade * 100 / cursos$Total
p = ggplot(data = cursos, aes(x = "", y = Percentual, fill = Fara_Curso_Superior))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Área de Interesse")
p
comp <- aggregate(x = list(Quantidade = respostas$Fara_Computacao), by = list(Ano = respostas$Ano, Fara_Computacao = respostas$Fara_Computacao), FUN=length)
por_ano <- aggregate(x = list(Total = respostas$Fara_Computacao), by = list(Ano = respostas$Ano), FUN=length)
comp <- merge(comp, por_ano)
comp$Percentual <- comp$Quantidade * 100 / comp$Total
p = ggplot(data = comp, aes(x = "", y = Percentual, fill = Fara_Computacao))
p = p + geom_bar(width = 1, stat = "identity")
p = p + facet_grid(facets = . ~ Ano)
p = p + coord_polar(theta = "y", start = 0)
p = p + scale_x_discrete()
p = p + xlab("") + ylab("") + labs(fill="Ano")
p = p + ggtitle("Percentual de Entrevistadas por Interesse em Computação")
p
temp <- data.frame(Tratamento = respostas[, 3], Opcao_Computacao = respostas[, 1])
fit <- aov(Opcao_Computacao ~ Tratamento, data = temp)
knit_print(anova(fit))
cat("\n")
knit_print(HSD.test(fit, 'Tratamento'))
par(mfrow=c(2,2))
plot(fit)
for (i in 4:ncol(respostas)) {
temp <- data.frame(Tratamento = respostas[, i], Opcao_Computacao = respostas[, 1])
nome <- colnames(respostas)[i]
cat(paste("\nTratamento:", nome, "\n"))
cat("\n")
fit <- aov(Opcao_Computacao ~ Tratamento, data = temp)
knit_print(anova(fit))
cat("\n")
knit_print(HSD.test(fit, 'Tratamento'))
assign(nome, temp)
par(mfrow=c(2,2))
plot(fit)
}
# regras = apriori(data = respostas)
# regras = apriori(data = respostas, parameter = list(minlen=2, supp=0.1, conf=0.8, maxtime=300), appearance = list(rhs = c("Fara_Computacao=Sim", "Fara_Computacao=Nao", "Fara_Computacao=Nao sei ainda"), default="lhs"))
# regras.ordem <- sort(regras, by="lift")
# write(regras.ordem, file="../dados/regras.txt")
